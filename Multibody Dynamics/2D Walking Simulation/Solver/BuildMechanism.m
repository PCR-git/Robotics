% Specifies the Jacobian PHIq, Gamma (from the acceleration equation),
% and the force vector Qa

function [M,PHIq,Gamma] = BuildMechanism(Y,n,m,M,s,MechData,Ratio)

a = Ratio(1);
b = Ratio(2);
c = Ratio(3);

% Local Position Vectors
%sO0 = s(:,1);
%sA1 = s(:,2);
sB1 = s(:,3);
sB2 = s(:,4);
sC2 = s(:,5);
sC3 = s(:,6);
sD3 = s(:,7);
sD4 = s(:,8);
sE4 = s(:,9);
sE5 = s(:,10);
sF5 = s(:,11);
sF6 = s(:,12);
sG6 = s(:,13);
sG7 = s(:,14);
sH7 = s(:,15);
sH8 = s(:,16);

% % Constructs the constraint vector (symbolically)
% % (Pass into FeedForward symbolic function)
% PHI_rev = f_PHI_rev(sA1,sA2,sB2,sB3,sC3,sC4,sD4,sD5,sE5,sE6,sF6,sF7,sG7,sG8);

r1 = MechData(1);
r2 = MechData(2);
r3 = MechData(3);
LinkRadius = MechData(4);
% ------------------

% % Original
% PHIqd = [0, 0, 0, 0, 0,      1, 0, 0, -r2/r1, 0, 0, r2/r1 - 1, 0, 0, 0, 0, 0,      0, 0, 0,      0, 0, 0,         0;...
%          0, 0, 1, 0, 0, -r3/r2, 0, 0,      0, 0, 0, r3/r2 - 1, 0, 0, 0, 0, 0,      0, 0, 0,      0, 0, 0,         0;...
%          0, 0, 0, 0, 0,      0, 0, 0,      0, 0, 0,        -1, 0, 0, 1, 0, 0,      0, 0, 0,      0, 0, 0,         0;...
%          0, 0, 0, 0, 0,      0, 0, 0,      0, 0, 0,         0, 0, 0, 0, 0, 0,      1, 0, 0, -r2/r1, 0, 0, r2/r1 - 1;...
%          0, 0, 0, 0, 0,      0, 0, 0,      0, 0, 0,         0, 0, 0, 1, 0, 0, -r3/r2, 0, 0,      0, 0, 0, r3/r2 - 1];
% 
% gammad = [0;0;0;0;0];

% ------------------

% FAILED
% PHIqd = [0, 0, (r1*(phi2 - phi3)*(L2^2 + LinkRadius^2)^(1/2))/(phi1 - phi2)^2, 0, 0, -r1*((phi2 - phi3)/(phi1 - phi2)^2 + 1/(phi1 - phi2))*(L2^2 + LinkRadius^2)^(1/2), 0, 0,  (r1*(L2^2 + LinkRadius^2)^(1/2))/(phi1 - phi2), 0, 0,                                              0, 0, 0,                                                              0, 0, 0,                                                                                 0, 0, 0,                                               0, 0, 0,                                              0;...
%          0, 0, (r1*(phi3 - phi4)*(L3^2 + LinkRadius^2)^(1/2))/(phi1 - phi2)^2, 0, 0,                   -(r1*(phi3 - phi4)*(L3^2 + LinkRadius^2)^(1/2))/(phi1 - phi2)^2, 0, 0, -(r1*(L3^2 + LinkRadius^2)^(1/2))/(phi1 - phi2), 0, 0, (r1*(L3^2 + LinkRadius^2)^(1/2))/(phi1 - phi2), 0, 0,                                                              0, 0, 0,                                                                                 0, 0, 0,                                               0, 0, 0,                                              0;...
%          0, 0,                                                              0, 0, 0,                                                                                 0, 0, 0,                                               0, 0, 0,                                             -1, 0, 0,                                                              1, 0, 0,                                                                                 0, 0, 0,                                               0, 0, 0,                                              0;...
%          0, 0,                                                              0, 0, 0,                                                                                 0, 0, 0,                                               0, 0, 0,                                              0, 0, 0, (r1*(phi6 - phi7)*(L2^2 + LinkRadius^2)^(1/2))/(phi5 - phi6)^2, 0, 0, -r1*((phi6 - phi7)/(phi5 - phi6)^2 + 1/(phi5 - phi6))*(L2^2 + LinkRadius^2)^(1/2), 0, 0,  (r1*(L2^2 + LinkRadius^2)^(1/2))/(phi5 - phi6), 0, 0,                                              0;...
%          0, 0,                                                              0, 0, 0,                                                                                 0, 0, 0,                                               0, 0, 0,                                              0, 0, 0, (r1*(phi7 - phi8)*(L3^2 + LinkRadius^2)^(1/2))/(phi5 - phi6)^2, 0, 0,                   -(r1*(phi7 - phi8)*(L3^2 + LinkRadius^2)^(1/2))/(phi5 - phi6)^2, 0, 0, -(r1*(L3^2 + LinkRadius^2)^(1/2))/(phi5 - phi6), 0, 0, (r1*(L3^2 + LinkRadius^2)^(1/2))/(phi5 - phi6)];...
% 
%      gammad = [phi1p*((phi3p*r1*(L2^2 + LinkRadius^2)^(1/2))/(phi1 - phi2)^2 - phi2p*r1*((2*(phi2 - phi3))/(phi1 - phi2)^3 + 1/(phi1 - phi2)^2)*(L2^2 + LinkRadius^2)^(1/2) + (2*phi1p*r1*(phi2 - phi3)*(L2^2 + LinkRadius^2)^(1/2))/(phi1 - phi2)^3) + phi3p*((phi1p*r1*(L2^2 + LinkRadius^2)^(1/2))/(phi1 - phi2)^2 - (phi2p*r1*(L2^2 + LinkRadius^2)^(1/2))/(phi1 - phi2)^2) - phi2p*((phi1p*r1*(L2^2 + LinkRadius^2)^(1/2))/(phi1 - phi2)^2 - phi2p*r1*(L2^2 + LinkRadius^2)^(1/2)*((2*(phi2 - phi3))/(phi1 - phi2)^3 + 2/(phi1 - phi2)^2) + (phi3p*r1*(L2^2 + LinkRadius^2)^(1/2))/(phi1 - phi2)^2 + (2*phi1p*r1*(phi2 - phi3)*(L2^2 + LinkRadius^2)^(1/2))/(phi1 - phi2)^3);...
%                phi2p*((phi3p*r1*(L3^2 + LinkRadius^2)^(1/2))/(phi1 - phi2)^2 - (phi4p*r1*(L3^2 + LinkRadius^2)^(1/2))/(phi1 - phi2)^2 - (2*phi1p*r1*(phi3 - phi4)*(L3^2 + LinkRadius^2)^(1/2))/(phi1 - phi2)^3 + (2*phi2p*r1*(phi3 - phi4)*(L3^2 + LinkRadius^2)^(1/2))/(phi1 - phi2)^3) - phi1p*((phi3p*r1*(L3^2 + LinkRadius^2)^(1/2))/(phi1 - phi2)^2 - (phi4p*r1*(L3^2 + LinkRadius^2)^(1/2))/(phi1 - phi2)^2 - (2*phi1p*r1*(phi3 - phi4)*(L3^2 + LinkRadius^2)^(1/2))/(phi1 - phi2)^3 + (2*phi2p*r1*(phi3 - phi4)*(L3^2 + LinkRadius^2)^(1/2))/(phi1 - phi2)^3) - phi3p*((phi1p*r1*(L3^2 + LinkRadius^2)^(1/2))/(phi1 - phi2)^2 - (phi2p*r1*(L3^2 + LinkRadius^2)^(1/2))/(phi1 - phi2)^2) + phi4p*((phi1p*r1*(L3^2 + LinkRadius^2)^(1/2))/(phi1 - phi2)^2 - (phi2p*r1*(L3^2 + LinkRadius^2)^(1/2))/(phi1 - phi2)^2);...
%                0;...
%                phi5p*((phi7p*r1*(L2^2 + LinkRadius^2)^(1/2))/(phi5 - phi6)^2 - phi6p*r1*((2*(phi6 - phi7))/(phi5 - phi6)^3 + 1/(phi5 - phi6)^2)*(L2^2 + LinkRadius^2)^(1/2) + (2*phi5p*r1*(phi6 - phi7)*(L2^2 + LinkRadius^2)^(1/2))/(phi5 - phi6)^3) + phi7p*((phi5p*r1*(L2^2 + LinkRadius^2)^(1/2))/(phi5 - phi6)^2 - (phi6p*r1*(L2^2 + LinkRadius^2)^(1/2))/(phi5 - phi6)^2) - phi6p*((phi5p*r1*(L2^2 + LinkRadius^2)^(1/2))/(phi5 - phi6)^2 - phi6p*r1*(L2^2 + LinkRadius^2)^(1/2)*((2*(phi6 - phi7))/(phi5 - phi6)^3 + 2/(phi5 - phi6)^2) + (phi7p*r1*(L2^2 + LinkRadius^2)^(1/2))/(phi5 - phi6)^2 + (2*phi5p*r1*(phi6 - phi7)*(L2^2 + LinkRadius^2)^(1/2))/(phi5 - phi6)^3);...
%                phi6p*((phi7p*r1*(L3^2 + LinkRadius^2)^(1/2))/(phi5 - phi6)^2 - (phi8p*r1*(L3^2 + LinkRadius^2)^(1/2))/(phi5 - phi6)^2 - (2*phi5p*r1*(phi7 - phi8)*(L3^2 + LinkRadius^2)^(1/2))/(phi5 - phi6)^3 + (2*phi6p*r1*(phi7 - phi8)*(L3^2 + LinkRadius^2)^(1/2))/(phi5 - phi6)^3) - phi5p*((phi7p*r1*(L3^2 + LinkRadius^2)^(1/2))/(phi5 - phi6)^2 - (phi8p*r1*(L3^2 + LinkRadius^2)^(1/2))/(phi5 - phi6)^2 - (2*phi5p*r1*(phi7 - phi8)*(L3^2 + LinkRadius^2)^(1/2))/(phi5 - phi6)^3 + (2*phi6p*r1*(phi7 - phi8)*(L3^2 + LinkRadius^2)^(1/2))/(phi5 - phi6)^3) - phi7p*((phi5p*r1*(L3^2 + LinkRadius^2)^(1/2))/(phi5 - phi6)^2 - (phi6p*r1*(L3^2 + LinkRadius^2)^(1/2))/(phi5 - phi6)^2) + phi8p*((phi5p*r1*(L3^2 + LinkRadius^2)^(1/2))/(phi5 - phi6)^2 - (phi6p*r1*(L3^2 + LinkRadius^2)^(1/2))/(phi5 - phi6)^2)];

% ------------------

% PHIqd = [ 0, 0, -b, 0, 0, a + b, 0, 0, -a, 0, 0,  0, 0, 0,  0, 0, 0,     0, 0, 0,  0, 0, 0,  0;...
%           0, 0, -1, 0, 0,     1, 0, 0,  1, 0, 0, -1, 0, 0,  0, 0, 0,     0, 0, 0,  0, 0, 0,  0;...
%           0, 0,  0, 0, 0,     0, 0, 0,  0, 0, 0, -1, 0, 0,  1, 0, 0,     0, 0, 0,  0, 0, 0,  0;...
%           0, 0,  0, 0, 0,     0, 0, 0,  0, 0, 0,  0, 0, 0, -b, 0, 0, a + b, 0, 0, -a, 0, 0,  0;...
%           0, 0,  0, 0, 0,     0, 0, 0,  0, 0, 0,  0, 0, 0, -1, 0, 0,     1, 0, 0,  1, 0, 0, -1];

% PHIqd = [ 0, 0, -b, 0, 0, a + b, 0, 0, -a, 0, 0,  0, 0, 0,  0, 0, 0,     0, 0, 0,  0, 0, 0,  0;...
%           0, 0, -c, 0, 0,     c, 0, 0,  a, 0, 0, -a, 0, 0,  0, 0, 0,     0, 0, 0,  0, 0, 0,  0;...
%           0, 0,  0, 0, 0,     0, 0, 0,  0, 0, 0, -1, 0, 0,  1, 0, 0,     0, 0, 0,  0, 0, 0,  0;...
%           0, 0,  0, 0, 0,     0, 0, 0,  0, 0, 0,  0, 0, 0, -b, 0, 0, a + b, 0, 0, -a, 0, 0,  0;...
%           0, 0,  0, 0, 0,     0, 0, 0,  0, 0, 0,  0, 0, 0, -c, 0, 0,     c, 0, 0,  a, 0, 0, -a];

PHIqd = [ 0, 0, -b, 0, 0, a + b, 0, 0, -a, 0, 0,  0, 0, 0, 0, 0, 0,  0, 0, 0,       0, 0, 0, 0;...
          0, 0, -c, 0, 0,     c, 0, 0,  a, 0, 0, -a, 0, 0, 0, 0, 0,  0, 0, 0,       0, 0, 0, 0;...
          0, 0,  0, 0, 0,     0, 0, 0,  0, 0, 0, -1, 0, 0, 1, 0, 0,  0, 0, 0,       0, 0, 0, 0;...
          0, 0,  0, 0, 0,     0, 0, 0,  0, 0, 0,  0, 0, 0, a, 0, 0, -a, 0, 0,      -c, 0, 0, c;...
          0, 0,  0, 0, 0,     0, 0, 0,  0, 0, 0,  0, 0, 0, 0, 0, 0,  a, 0, 0, - a - b, 0, 0, b];

gammad = [0;0;0;0;0];

% Constructs the Jacobian (each row corresponds to a constraint) 
PHIq = [JAC_revolute(Y,1,sB1,2,sB2,n,m);...
        JAC_revolute(Y,2,sC2,3,sC3,n,m);...
        JAC_revolute(Y,3,sD3,4,sD4,n,m);...
        JAC_revolute(Y,4,sE4,5,sE5,n,m);...
        JAC_revolute(Y,5,sF5,6,sF6,n,m);...
        JAC_revolute(Y,6,sG6,7,sG7,n,m);...
        JAC_revolute(Y,7,sH7,8,sH8,n,m);...
        PHIqd];

% Constructs Gamma (each row corresponds to a constraint)    
Gamma = [Gamma_revolute(Y,1,sB1,2,sB2,n,m);...
         Gamma_revolute(Y,2,sC2,3,sC3,n,m);...
         Gamma_revolute(Y,3,sD3,4,sD4,n,m);...
         Gamma_revolute(Y,4,sE4,5,sE5,n,m);...
         Gamma_revolute(Y,5,sF5,6,sF6,n,m);...
         Gamma_revolute(Y,6,sG6,7,sG7,n,m);...
         Gamma_revolute(Y,7,sH7,8,sH8,n,m);...
         gammad];

end
